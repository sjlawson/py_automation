version: 2
jobs:
  build:
    working_directory: ~/al_py_automation
    docker:
      - image: circleci/python:3.7.2
        auth:
           username: $DOCKER_USERNAME
           password: $DOCKER_AUTH
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
      - run:
          name: Authenticate to DockerHub
          command: 'docker login -u "$DOCKER_USERNAME" -p "$DOCKER_AUTH"'
      # - run: |
      #     echo 'export BASEURL_OVERRIDE=https://wwwstg.angieslist.com' >> $BASH_ENV
      #     echo 'export NVM_DIR=/home/circleci/.nvm' >> $BASH_ENV
      #     echo 'export NODE_VERSION=8.11.1' >> $BASH_ENV
      - run:
          name: Build Docker image
          command: |
            docker build -t angieslist/al_py_automation:"${CIRCLE_BUILD_NUM}" -t angieslist/al_py_automation:latest .
      - run:
          name: Publish Docker image
          command: |
            docker push angieslist/al_py_automation:"${CIRCLE_BUILD_NUM}"
            docker push angieslist/al_py_automation:latest
      - run:
          name: Run docker image
          command: docker run -d --name al_py_automation_al_py_automation_1 -v `pwd`/container_reports:/al_py_automation/reports angieslist/al_py_automation:"${CIRCLE_BUILD_NUM}"
      - run: sleep 10
      - run:
          name: Run subset of tests
          command: |
          ./behave_docker_test.sh al_py_automation_al_py_automation_1 headless chrome tags header_regression
      # - run:
      #     name: Install dependencies and launch framework
      #     command: |
      #       sudo apt-get update
      #       sudo apt-get install -y chromedriver
      #       sudo apt-get install -y xvfb
      #       curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
      #       . $NVM_DIR/nvm.sh
      #       [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 
      #       [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" 
      #       nvm install $NODE_VERSION
      #       nvm alias default $NODE_VERSION
      #       nvm use default
      #       npm install -g mountebank
      #       npm install -g cbt_tunnels
      #       echo 'export PATH=/home/circleci/.nvm/versions/node/v8.11.1/bin:$PATH' >> $BASH_ENV
      #       echo $PATH
      #       cd /home/circleci/al_py_automation
      #       sudo pip install -r requirements.txt
      # - run:
      #     name: Launch Framework and run circle-tag tests
      #     command: |
      #       cd /home/circleci
      #       source .bashrc
      #       cd /home/circleci/al_py_automation
      #       python manage.py launch_framework &
      #       sleep 1
      #       ./behave_tags.sh headless chrome circle
